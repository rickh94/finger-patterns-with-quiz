---
import NotesDisplay from "~/components/NotesDisplay";
import FingerDisplay from "~/components/FingerDisplay";
import Layout from "~/layouts/Layout.astro";
import ScalePicker from "~/components/ScalePicker";
import ScalesButton from "~/components/ScalesButton";
import scales from "~/scales";
import Link from "~/components/Link";

export function getStaticPaths() {
  return scales.map((scale) => ({
    params: { key: scale.key, mode: scale.mode },
  }));
}

const { mode, key } = Astro.params;
const thisScale = scales.find(
  (scale) => scale.key === key && scale.mode === mode,
);
if (!thisScale || !thisScale.notes || !thisScale.key) {
  return Astro.redirect("/404");
}
---

<Layout title={thisScale.name}>
  <div class="container mx-auto px-2 font-serif">
    <header class="mb-4 mt-12 flex w-full justify-center sm:mt-8">
      <ScalesButton client:load>
        <span
          class="border-b-2 border-fuchsia-600 px-2 pb-1 text-xl font-bold sm:text-3xl"
        >
          {thisScale.name}
        </span>
      </ScalesButton>
    </header>
    <div class="mx-auto flex max-w-4xl flex-col">
      <p class="mb-4 italic">
        This shows all the finger patterns for all the strings and the notes of
        the {thisScale.name} scale. If clicking on a finger doesn't highlight a
        note, it's either an open G or not in the scale.
      </p>
      <div class="flex w-full justify-center">
        <NotesDisplay
          client:load
          baseId="scaleup"
          notes={thisScale.notes}
          offset={thisScale.offset}
        />
      </div>
      <div class="mx-auto mt-4 grid grid-cols-1 gap-2 md:grid-cols-2 md:gap-4">
        {
          thisScale.patterns.map((pattern) => (
            <div class="flex flex-col justify-center">
              <div>
                <h2 class="text-xl">
                  {pattern.violinString} String â€”{" "}
                  <em class="italic">{pattern.pattern.name}</em>
                </h2>
                <FingerDisplay
                  client:load
                  baseId={pattern.id}
                  radius={2}
                  widths={pattern.pattern.widths}
                />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>

  <div class="absolute left-0 top-0 m-4">
    <Link href="/" class="border-b-2 border-fuchsia-600">Back Home</Link>
  </div>
  <ScalePicker client:idle transition:name="scale-picker" />
</Layout>
