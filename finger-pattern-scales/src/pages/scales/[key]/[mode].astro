---
import NotesDisplay from '../../../components/NotesDisplay.tsx';
import FingerDisplay from '../../../components/FingerDisplay.tsx';
import Layout from '../../../layouts/Layout.astro';
import ScalePicker from '../../../components/ScalePicker';
import ScalesButton from '../../../components/ScalesButton';
import scales from '../../../scales';

export function getStaticPaths() {
  return scales.map((scale) => ({
    params: { key: scale.key, mode: scale.mode },
  }));
}

const { mode, key } = Astro.params;
const thisScale = scales.find(
  (scale) => scale.key === key && scale.mode === mode
);
if (!thisScale || !thisScale.notes || !thisScale.key) {
  return Astro.redirect('/404');
}
---

<Layout title={thisScale.name}>
  <div class="container mx-auto px-2 font-serif">
    <header class="mt-12 sm:mt-8 mb-4 w-full flex justify-center">
      <ScalesButton
        client:load
        class="text-xl sm:text-3xl font-bold border-b-2 pb-1 px-2 border-fuchsia-600"
      >
        {thisScale.name}
      </ScalesButton>
    </header>
    <div class="flex flex-col max-w-4xl mx-auto">
      <p class="italic mb-4">
        This shows all the finger patterns for all the strings and the notes of
        the {thisScale.name} scale. If clicking on a finger doesn't highlight a
        note, it's either an open G or not in the scale.
      </p>
      <div class="flex w-full justify-center">
        <NotesDisplay
          client:load
          baseId="scaleup"
          notes={thisScale.notes}
          offset={thisScale.offset}
        />
      </div>
      <div class="mt-4 mx-auto grid grid-cols-1 md:grid-cols-2 gap-2 md:gap-4">
        {
          thisScale.patterns.map((pattern) => (
            <div class="flex flex-col justify-center">
              <div>
                <h2 class="text-xl">
                  {pattern.violinString} String â€”{' '}
                  <em class="italic">{pattern.pattern.name}</em>
                </h2>
                <FingerDisplay
                  client:load
                  baseId={pattern.id}
                  radius={2}
                  widths={pattern.pattern.widths}
                />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>

  <div class="absolute top-0 left-0 m-4">
    <a href="/" class="border-b-2 border-fuchsia-600">Back Home</a>
  </div>
  <ScalePicker client:idle transition:name="scale-picker" />
</Layout>
